package ru.inno.earthquakes.model.models.db;

import io.objectbox.BoxStore;
import io.objectbox.annotation.Entity;
import io.objectbox.annotation.Generated;
import io.objectbox.annotation.Id;
import io.objectbox.annotation.Relation;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.relation.ToOne;

/**
 * @author Artur Badretdinov (Gaket)
 *         20.07.17.
 */
@Entity
public class LocationDb {

    @Id
    private long id;

    private String name;
    @Relation
    private CoordinatesDb coords;

    /** Used to resolve relations */
    @Internal
    @Generated(1307364262)
    transient BoxStore __boxStore;




    @Generated(40033677)
    @Internal
    /** This constructor was generated by ObjectBox and may change any time. */
    public LocationDb(long id, String name, long coordsId) {
        this.id = id;
        this.name = name;
        this.coordsToOne.setTargetId(coordsId);
    }

    @Generated(862638433)
    public LocationDb() {
    }

    @Internal
    @Generated(165573239)
    transient ToOne<CoordinatesDb> coordsToOne = new ToOne<>(this,
            LocationDb_.coords);




    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    /** To-one relationship, resolved on first access. */
    @Generated(1430354045)
    public CoordinatesDb getCoords() {
        coords = coordsToOne.getTarget();
        return coords;
    }

    /** Set the to-one relation including its ID property. */
    @Generated(800098808)
    public void setCoords(CoordinatesDb coords) {
        coordsToOne.setTarget(coords);
        this.coords = coords;
    }


}
